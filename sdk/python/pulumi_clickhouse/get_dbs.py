# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs

__all__ = [
    'GetDbsResult',
    'AwaitableGetDbsResult',
    'get_dbs',
    'get_dbs_output',
]

@pulumi.output_type
class GetDbsResult:
    """
    A collection of values returned by getDbs.
    """
    def __init__(__self__, dbs=None, id=None):
        if dbs and not isinstance(dbs, list):
            raise TypeError("Expected argument 'dbs' to be a list")
        pulumi.set(__self__, "dbs", dbs)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)

    @property
    @pulumi.getter
    def dbs(self) -> Sequence['outputs.GetDbsDbResult']:
        return pulumi.get(self, "dbs")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")


class AwaitableGetDbsResult(GetDbsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDbsResult(
            dbs=self.dbs,
            id=self.id)


def get_dbs(opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDbsResult:
    """
    Datasource to retrieve all databases set in clickhouse instance
    """
    __args__ = dict()
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('clickhouse:index/getDbs:getDbs', __args__, opts=opts, typ=GetDbsResult).value

    return AwaitableGetDbsResult(
        dbs=pulumi.get(__ret__, 'dbs'),
        id=pulumi.get(__ret__, 'id'))


@_utilities.lift_output_func(get_dbs)
def get_dbs_output(opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDbsResult]:
    """
    Datasource to retrieve all databases set in clickhouse instance
    """
    ...
